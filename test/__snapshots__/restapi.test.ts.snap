// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`resource created 1`] = `
Object {
  "Outputs": Object {
    "RestApiEndpoint0551178A": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "RestApi0C43BF4B",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "[HASH REMOVED]",
            },
            "/",
          ],
        ],
      },
    },
    "kaleidobackendRestAPIKeytest": Object {
      "Value": Object {
        "Ref": "RestApiAPIKeyAC468D88",
      },
    },
  },
  "Parameters": Object {
    "[HASH REMOVED]": Object {
      "Description": "[HASH REMOVED]",
      "Type": "String",
    },
    "[HASH REMOVED]": Object {
      "Description": "[HASH REMOVED]",
      "Type": "String",
    },
    "[HASH REMOVED]": Object {
      "Description": "[HASH REMOVED]",
      "Type": "String",
    },
    "[HASH REMOVED]": Object {
      "Description": "[HASH REMOVED]",
      "Type": "String",
    },
    "[HASH REMOVED]": Object {
      "Description": "[HASH REMOVED]",
      "Type": "String",
    },
    "[HASH REMOVED]": Object {
      "Description": "[HASH REMOVED]",
      "Type": "String",
    },
    "[HASH REMOVED]": Object {
      "Description": "[HASH REMOVED]",
      "Type": "String",
    },
    "[HASH REMOVED]": Object {
      "Description": "[HASH REMOVED]",
      "Type": "String",
    },
    "[HASH REMOVED]": Object {
      "Description": "[HASH REMOVED]",
      "Type": "String",
    },
  },
  "Resources": Object {
    "AssetsBucket5CB76180": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketName": "kaleido-backend-assets-test",
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "RestApi0C43BF4B": Object {
      "Properties": Object {
        "ApiKeySourceType": "HEADER",
        "Name": "kaleido-backend-restApi-test",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "RestApiAPIKeyAC468D88": Object {
      "Properties": Object {
        "Enabled": true,
        "Name": "kaleido-backend-RestApiKey-test",
        "StageKeys": Array [
          Object {
            "RestApiId": Object {
              "Ref": "RestApi0C43BF4B",
            },
            "StageName": Object {
              "Ref": "[HASH REMOVED]",
            },
          },
        ],
      },
      "Type": "AWS::ApiGateway::ApiKey",
    },
    "RestApiARecord0F033820": Object {
      "Properties": Object {
        "AliasTarget": Object {
          "DNSName": Object {
            "Fn::GetAtt": Array [
              "RestApikaleidobackenddomaintest02DEB52D",
              "RegionalDomainName",
            ],
          },
          "HostedZoneId": Object {
            "Fn::GetAtt": Array [
              "RestApikaleidobackenddomaintest02DEB52D",
              "RegionalHostedZoneId",
            ],
          },
        },
        "HostedZoneId": "XXX",
        "Name": "api.test.example.com.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "RestApiAccount7C83CF5A": Object {
      "DependsOn": Array [
        "RestApi0C43BF4B",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "RestApiCloudWatchRoleE3ED6605",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "RestApiCloudWatchRoleE3ED6605": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "[HASH REMOVED]": Object {
      "DependsOn": Array [
        "RestApiadaccountmetadataGET6F4342BF",
        "RestApiadaccountmetadataOPTIONS33B19E15",
        "RestApiadaccountmetadataD1322BA1",
        "RestApiadaccount75913BA5",
        "RestApiadOPTIONS1157C307",
        "RestApiadPOST0842ADAD",
        "RestApiad34EC5450",
        "RestApipostOPTIONS2C01DF8D",
        "RestApipostPOST51B3983C",
        "RestApipost76A26EED",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "[HASH REMOVED]": Object {
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "[HASH REMOVED]",
        },
        "RestApiId": Object {
          "Ref": "RestApi0C43BF4B",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "RestApiUsagePlanForAPIKey1841180F": Object {
      "Properties": Object {
        "ApiStages": Array [
          Object {
            "ApiId": Object {
              "Ref": "RestApi0C43BF4B",
            },
            "Stage": Object {
              "Ref": "[HASH REMOVED]",
            },
            "Throttle": Object {},
          },
        ],
      },
      "Type": "AWS::ApiGateway::UsagePlan",
    },
    "RestApiUsagePlanForAPIKeyUsagePlanKeyResource48D50910": Object {
      "Properties": Object {
        "KeyId": Object {
          "Ref": "RestApiAPIKeyAC468D88",
        },
        "KeyType": "API_KEY",
        "UsagePlanId": Object {
          "Ref": "RestApiUsagePlanForAPIKey1841180F",
        },
      },
      "Type": "AWS::ApiGateway::UsagePlanKey",
    },
    "RestApiad34EC5450": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "RestApi0C43BF4B",
            "RootResourceId",
          ],
        },
        "PathPart": "ad",
        "RestApiId": Object {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "RestApiadOPTIONS1157C307": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": Object {
            "application/json": "{"statusCode": 200}",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Ref": "RestApiad34EC5450",
        },
        "RestApiId": Object {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RestApiadPOST0842ADAD": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "ad4B4F25CB",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "RestApiad34EC5450",
        },
        "RestApiId": Object {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RestApiadPOSTApiPermissionTesttestRestApi41EB688DPOSTad0A228F19": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ad4B4F25CB",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "RestApi0C43BF4B",
              },
              "/test-invoke-stage/POST/ad",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RestApiadPOSTApiPermissiontestRestApi41EB688DPOSTad701884F2": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ad4B4F25CB",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "RestApi0C43BF4B",
              },
              "/",
              Object {
                "Ref": "[HASH REMOVED]",
              },
              "/POST/ad",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RestApiadaccount75913BA5": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "RestApiad34EC5450",
        },
        "PathPart": "{account}",
        "RestApiId": Object {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "RestApiadaccountmetadataD1322BA1": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "RestApiadaccount75913BA5",
        },
        "PathPart": "{metadata}",
        "RestApiId": Object {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "RestApiadaccountmetadataGET6F4342BF": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "getad76EDB9AB",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "RestApiadaccountmetadataD1322BA1",
        },
        "RestApiId": Object {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RestApiadaccountmetadataGETApiPermissionTesttestRestApi41EB688DGETadaccountmetadata57972358": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "getad76EDB9AB",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "RestApi0C43BF4B",
              },
              "/test-invoke-stage/GET/ad/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RestApiadaccountmetadataGETApiPermissiontestRestApi41EB688DGETadaccountmetadataF8958F46": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "getad76EDB9AB",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "RestApi0C43BF4B",
              },
              "/",
              Object {
                "Ref": "[HASH REMOVED]",
              },
              "/GET/ad/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RestApiadaccountmetadataOPTIONS33B19E15": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": Object {
            "application/json": "{"statusCode": 200}",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Ref": "RestApiadaccountmetadataD1322BA1",
        },
        "RestApiId": Object {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RestApikaleidobackenddomaintest02DEB52D": Object {
      "Properties": Object {
        "DomainName": "api.test.example.com",
        "EndpointConfiguration": Object {
          "Types": Array [
            "REGIONAL",
          ],
        },
        "RegionalCertificateArn": "",
        "SecurityPolicy": "TLS_1_2",
      },
      "Type": "AWS::ApiGateway::DomainName",
    },
    "RestApikaleidobackenddomaintestMaptestRestApi41EB688DFFBFBD05": Object {
      "Properties": Object {
        "DomainName": Object {
          "Ref": "RestApikaleidobackenddomaintest02DEB52D",
        },
        "RestApiId": Object {
          "Ref": "RestApi0C43BF4B",
        },
        "Stage": Object {
          "Ref": "[HASH REMOVED]",
        },
      },
      "Type": "AWS::ApiGateway::BasePathMapping",
    },
    "RestApipost76A26EED": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "RestApi0C43BF4B",
            "RootResourceId",
          ],
        },
        "PathPart": "post",
        "RestApiId": Object {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "RestApipostOPTIONS2C01DF8D": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": Object {
            "application/json": "{"statusCode": 200}",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Ref": "RestApipost76A26EED",
        },
        "RestApiId": Object {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RestApipostPOST51B3983C": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "postE6C9FCD1",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "RestApipost76A26EED",
        },
        "RestApiId": Object {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RestApipostPOSTApiPermissionTesttestRestApi41EB688DPOSTpostCDF55098": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "postE6C9FCD1",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "RestApi0C43BF4B",
              },
              "/test-invoke-stage/POST/post",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RestApipostPOSTApiPermissiontestRestApi41EB688DPOSTpostF9197BFF": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "postE6C9FCD1",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "RestApi0C43BF4B",
              },
              "/",
              Object {
                "Ref": "[HASH REMOVED]",
              },
              "/POST/post",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ad4B4F25CB": Object {
      "DependsOn": Array [
        "adServiceRoleDefaultPolicy1653785C",
        "adServiceRole81BC18E8",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "[HASH REMOVED]",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "[HASH REMOVED]",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "[HASH REMOVED]",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AllowedOrigin": "http://localhost:3001",
            "ApplicationCreatedTopicName": "kaleido-backend-media-application-created-test",
            "EnvironmentId": "test",
          },
        },
        "FunctionName": "kaleido-backend-ad-test",
        "Handler": "bin/main",
        "Role": Object {
          "Fn::GetAtt": Array [
            "adServiceRole81BC18E8",
            "Arn",
          ],
        },
        "Runtime": "go1.x",
        "Timeout": 60,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "adServiceRole81BC18E8": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "adServiceRoleDefaultPolicy1653785C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "lambda:*",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "ssm:Get*",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "adServiceRoleDefaultPolicy1653785C",
        "Roles": Array [
          Object {
            "Ref": "adServiceRole81BC18E8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "getad76EDB9AB": Object {
      "DependsOn": Array [
        "getadServiceRoleDefaultPolicyD4989B8A",
        "getadServiceRole3C46D960",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "[HASH REMOVED]",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "[HASH REMOVED]",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "[HASH REMOVED]",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AllowedOrigin": "http://localhost:3001",
            "ApplicationCreatedTopicName": "kaleido-backend-media-application-created-test",
            "EnvironmentId": "test",
          },
        },
        "FunctionName": "kaleido-backend-getad-test",
        "Handler": "bin/main",
        "Role": Object {
          "Fn::GetAtt": Array [
            "getadServiceRole3C46D960",
            "Arn",
          ],
        },
        "Runtime": "go1.x",
        "Timeout": 60,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "getadServiceRole3C46D960": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "getadServiceRoleDefaultPolicyD4989B8A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "lambda:*",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "ssm:Get*",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "getadServiceRoleDefaultPolicyD4989B8A",
        "Roles": Array [
          Object {
            "Ref": "getadServiceRole3C46D960",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "postE6C9FCD1": Object {
      "DependsOn": Array [
        "postServiceRoleDefaultPolicy9F513012",
        "postServiceRole8DEE3DFE",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "[HASH REMOVED]",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "[HASH REMOVED]",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "[HASH REMOVED]",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AllowedOrigin": "http://localhost:3001",
            "ApplicationCreatedTopicName": "kaleido-backend-media-application-created-test",
            "EnvironmentId": "test",
          },
        },
        "FunctionName": "kaleido-backend-post-test",
        "Handler": "bin/main",
        "Role": Object {
          "Fn::GetAtt": Array [
            "postServiceRole8DEE3DFE",
            "Arn",
          ],
        },
        "Runtime": "go1.x",
        "Timeout": 60,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "postServiceRole8DEE3DFE": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "postServiceRoleDefaultPolicy9F513012": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "lambda:*",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "ssm:Get*",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "postServiceRoleDefaultPolicy9F513012",
        "Roles": Array [
          Object {
            "Ref": "postServiceRole8DEE3DFE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;
